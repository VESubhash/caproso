{"version":3,"sources":["webpack:///./src/app/layout/manage-organizations/manage-organizations-routing.module.ts","webpack:///./src/app/layout/manage-organizations/manage-organizations.component.html","webpack:///./src/app/layout/manage-organizations/manage-organizations.component.scss","webpack:///./src/app/layout/manage-organizations/manage-organizations.component.ts","webpack:///./src/app/layout/manage-organizations/manage-organizations.module.ts"],"names":[],"mappings":"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","file":"manage-organizations-manage-organizations-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ManageOrganizationsComponent } from './manage-organizations.component';\n\nconst routes: Routes = [\n    {\n        path: '', component: ManageOrganizationsComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class ManageOrganizationsRoutingModule {\n}\n","module.exports = \"<div class=\\\"col-lg-12\\\">\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-lg-12\\\">\\r\\n        <h3 class=\\\"one\\\">Manage Client </h3>\\r\\n    </div>\\r\\n</div>\\r\\n<div>\\r\\n    <div class=\\\"card-body table-responsive\\\">\\r\\n            <div class=\\\"row mb-1\\\" *ngIf=\\\"isCaprosoAdmin\\\">\\r\\n                <div class=\\\"col-md-2\\\"><label> Select Affiliates:</label></div>\\r\\n                <div class=\\\"col-md-4\\\">\\r\\n                        <select class=\\\"form-control\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"affiliateId\\\" (change)=\\\"onChange($event.target.value)\\\">\\r\\n                            <option value=\\\"0\\\">All</option>\\r\\n                            <option *ngFor=\\\"let affiliate of affiliateModel\\\" [(value)]=\\\"affiliate.AffiliateId\\\" [selected]=\\\"affiliate.AffiliateId == affiliateId\\\">{{affiliate.AffiliateName}}</option>\\r\\n                        </select>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6\\\"><button class=\\\"btn btn-primary float-right\\\" (click)=\\\"addOrganization()\\\" >Add Client</button></div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-12\\\" *ngIf=\\\"!isCaprosoAdmin\\\">\\r\\n                <button class=\\\"btn btn-primary float-right mb-1\\\" (click)=\\\"addOrganization()\\\" >Add Client</button>\\r\\n            </div>\\r\\n        <table datatable [dtOptions]=\\\"dtOptions\\\"  class=\\\"table table-bordered user-table display\\\">\\r\\n            <thead>\\r\\n            <tr>\\r\\n                <th *ngIf=\\\"isCaprosoAdmin\\\">Affiliate Name</th>\\r\\n                <th>Client Name</th>\\r\\n                <th>User Name</th>\\r\\n                <th>First name</th>\\r\\n                <th>Last name</th>\\r\\n                <th>Created Date</th>\\r\\n                <th>Active</th>\\r\\n                <th>Action</th>\\r\\n            </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n            <tr *ngFor=\\\"let organization of organizations; let odd=odd; let even=even\\\" [ngClass]=\\\"{ odd: odd, even:even}\\\">\\r\\n                <td *ngIf=\\\"isCaprosoAdmin\\\">{{ organization.AffiliateName }}</td>\\r\\n                <td>{{ organization.OrganizationName }}</td>\\r\\n                <td>{{ organization.UserName }}</td>\\r\\n                <td>{{ organization.FirstName }}</td>\\r\\n                <td>{{ organization.LastName }}</td>\\r\\n                <td>{{ organization.CreatedDate | date:'MM/dd/yyyy hh:mm:ss' }}</td>\\r\\n                <td>\\r\\n                    <button (click)=\\\"onStatusChange(organization,organization.IsActive)\\\" class=\\\"dropbtn\\\"\\r\\n                            [ngClass]=\\\"{'bg-success': organization.IsActive.toString().toLowerCase() === 'true', 'bg-danger': organization.IsActive.toString().toLowerCase() === 'false' }\\\">\\r\\n                        {{organization.IsActive.toString().toLowerCase() === 'true'? 'Active': 'InActive'}}\\r\\n                    </button>\\r\\n                </td>\\r\\n                <td><button class=\\\"btn-space\\\" (click)=\\\"goToOrganizationDetails(organization.UserId, organization.OrganizationId, organization.OrganizationName)\\\"> <i class=\\\"fa fa-pencil\\\"></i></button> <button btn-space><i class=\\\"fa fa-trash\\\"></i> </button> </td>\\r\\n            </tr>\\r\\n            <tr *ngIf=\\\"users?.length == 0\\\">\\r\\n                <td colspan=\\\"3\\\" class=\\\"no-data-available\\\">No data!</td>\\r\\n            </tr>\\r\\n            </tbody>\\r\\n        </table>\\r\\n    </div>\\r\\n</div>\\r\\n</div>\\r\\n\"","module.exports = \"/*\\r\\n   server-side-angular-way.component.css\\r\\n*/\\n.no-data-available {\\n  text-align: center; }\\n/*\\r\\n   src/styles.css (i.e. your global style)\\r\\n*/\\n.user-table {\\n  width: 100% !important; }\\n.btn-space {\\n  margin-right: 5px; }\\n\"","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {OrganizationsModal} from './OrganizationsModal';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {OrganizationsService} from '../../services/organizations.service';\nimport {AffiliatesService} from '../../services/affiliates.service';\nimport { DataTableDirective } from 'angular-datatables';\nimport {Subject} from 'rxjs/index';\nimport {ActiveModel} from '../../model/ActiveModel';\nimport {UsersModal} from '../manage-user/UsersModal';\nimport {AlertService} from '../../services/alert.service';\nimport {UserService} from '../../services/user.service';\n\n@Component({\n    selector: 'manage-organizations',\n    templateUrl: './manage-organizations.component.html',\n    styleUrls: ['./manage-organizations.component.scss']\n})\n\n\nexport class ManageOrganizationsComponent implements OnInit {\n    dtOptions: DataTables.Settings = {};\n    dtTrigger: Subject<any> = new Subject();\n    organizations: OrganizationsModal[] = [];\n    userId: number;\n    affiliateId: number;\n    affiliateName: string;\n    affiliateOptions:{} ;\n    affiliateModel:any;\n    isCaprosoAdmin = false;\n    @ViewChild(DataTableDirective)\n    dtElement: DataTableDirective;\n    activeModel: ActiveModel[];\n    constructor(private httpOrganizationService: OrganizationsService\n                , private httpAffiliateService: AffiliatesService\n                , private router: Router\n                , private route: ActivatedRoute\n                , private alertService: AlertService\n                , private httpUserService: UserService\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.route\n            .queryParams\n            .subscribe(params => {\n                this.userId = params['id'] || 0;\n            });\n        this.bindUserTable();\n\n     this.affiliateId = Number(localStorage.getItem('affiliateId'));\n     this.affiliateName = localStorage.getItem('affiliateName');\n     this.getAffiliatesList();\n     this.isCaprosoAdmin = localStorage.getItem('roleName') == 'Admin';\n     this.loadActiveModel();\n    }\n\n    bindUserTable(): void {\n\n        this.dtOptions =  {\n            pagingType: 'full_numbers',\n            pageLength: 10,\n            serverSide: true,\n            processing: true,\n            ajax: (dataTablesParameters: any, callback) => {\n                this.affiliateOptions = {\n                    affiliateId: this.affiliateId,\n                };\n                dataTablesParameters.affiliateOptions = this.affiliateOptions;\n                this.httpOrganizationService.get(dataTablesParameters).subscribe(resp => {\n                    this.organizations = resp[0].Data;\n                    callback({\n                        recordsTotal: resp[0].RecordsTotal,\n                        recordsFiltered: resp[0].RecordsFiltered,\n                        data: []\n                    });\n                });\n            },\n            columns: [{data: 'OrganizationName'}, { data: 'UserName'}, {data: 'FirstName'}, {data: 'LastName'}, {data: 'IsActive'}]\n        };\n    }\n\n    private getAffiliatesList() {\n        this.httpAffiliateService.getAllAffiliates(true)\n            .subscribe(affiliate => {\n                this.affiliateModel = affiliate;\n            });\n    }\n    public addOrganization() {\n        localStorage.removeItem('userId');\n        localStorage.removeItem('organizationId');\n        localStorage.removeItem('organizationName');\n        this.router.navigate(['/organization-detail']);\n    }\n\n    public goToOrganizationDetails(id: number, organizationId: number, organization: string ) {\n        localStorage.setItem('userId',id.toString() );\n        localStorage.setItem('organizationId',organizationId.toString() );\n        localStorage.setItem('organizationName',organization);\n        this.router.navigate(['organization-detail'], {queryParams: {id: id }});\n\n    }\n    public  onChange(affiliateId){\n\n        this.affiliateOptions = {\n            affiliateId: affiliateId,\n        };\n\n        this.organizations = [];\n        this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n            // Destroy the table first\n            //dtInstance.destroy();\n\n            //draw the table first\n            dtInstance.draw();\n            // Call the dtTrigger to rerender again\n\n            // this.httpOrganizationService.get(this.affiliateOptions)\n            //   .subscribe(providers => {\n            //\n            //     this.organizations = providers;\n            //     // Calling the DT trigger to manually render the table\n            //    this.dtTrigger.next();\n            //   });\n        });\n    }\n\n    public onStatusChange(user: OrganizationsModal, isActive: boolean) {\n        this.httpUserService.updateActive(user.UserId, isActive)\n            .subscribe(\n                data => {\n                    if (data) {\n                        user.IsActive = !isActive;\n                        this.alertService.success(user.IsActive ? 'Client activate successfully' : 'Client deactivate successfully', false);\n                    }\n                    else {\n                        this.alertService.success('Something wrong please contact to administrator.');\n                    }\n                },\n                error => {\n                    this.alertService.error(error);\n                    // this.loading = false;\n                });\n    }\n    public  loadActiveModel(){\n        this.activeModel = [{\"value\": 'True' ,\"name\": 'Active'},{\"value\": 'False' ,\"name\": 'InActive'}];\n    }\n}\n\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgbCarouselModule, NgbAlertModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { ManageOrganizationsRoutingModule } from './manage-organizations-routing.module';\nimport { DataTablesModule } from 'angular-datatables';\nimport { StatModule } from '../../shared';\nimport { ManageOrganizationsComponent } from './manage-organizations.component';\nimport { FormsModule } from '@angular/forms';\n\n\n\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        NgbCarouselModule.forRoot(),\n        NgbAlertModule.forRoot(),\n        ManageOrganizationsRoutingModule,\n        StatModule,\n        DataTablesModule,\n        FormsModule\n    ],\n    declarations: [ManageOrganizationsComponent]\n\n})\nexport class ManageOrganizationsModule {}\n"],"sourceRoot":""}